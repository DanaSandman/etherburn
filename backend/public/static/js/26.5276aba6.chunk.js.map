{"version":3,"sources":["../../src/secp256k1v3-adapter.ts","../../src/hash.ts","../../src/index.ts","../node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/index.js","../node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-adapter.js","../node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-lib/index.js","../node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-lib/der.js","../node_modules/eth-sig-util/node_modules/ethereumjs-abi/index.js","../node_modules/eth-sig-util/node_modules/ethereumjs-abi/lib/index.js","../../../src/secp256k1v3-lib/index.ts","../../../src/secp256k1v3-lib/der.ts","../../src/constants.ts","../../src/account.ts","../../src/signature.ts","../../src/object.ts","../node_modules/eth-sig-util/node_modules/tweetnacl/nacl-fast.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/ethjs-util/lib/index.js","../node_modules/eth-sig-util/node_modules/bn.js/lib/bn.js","../../src/bytes.ts"],"names":["Uint8Array","from","publicKey","a","hash","createHash","_typeof","Symbol","iterator","obj","constructor","prototype","_require","require","keccak224","keccak384","k256","keccak256","keccak512","secp256k1","assert","rlp","BN","Buffer","Object","assign","exports","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","SHA3_NULL_S","KECCAK256_NULL","SHA3_NULL","KECCAK256_RLP_ARRAY_S","SHA3_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","SHA3_RLP_ARRAY","KECCAK256_RLP_S","SHA3_RLP_S","KECCAK256_RLP","SHA3_RLP","zeros","bytes","allocUnsafe","fill","zeroAddress","bufferToHex","setLengthLeft","setLength","msg","length","right","buf","toBuffer","copy","slice","setLengthRight","unpad","stripZeros","first","stripHexPrefix","toString","v","isBuffer","Array","isArray","isHexString","padToEven","intToBuffer","undefined","isBN","toArrayLike","toArray","Error","bufferToInt","toNumber","fromSigned","num","fromTwos","toUnsigned","toTwos","keccak","bits","sha3","sha256","update","digest","ripemd160","padded","rlphash","encode","isValidPrivate","privateKey","privateKeyVerify","isValidPublic","sanitize","publicKeyVerify","concat","pubToAddress","publicToAddress","pubKey","publicKeyConvert","privateToPublic","publicKeyCreate","importPublic","ecsign","msgHash","sig","sign","ret","r","signature","s","recovery","hashPersonalMessage","message","prefix","ecrecover","senderPubKey","recover","toRpcSig","fromRpcSig","privateToAddress","isValidAddress","address","test","isZeroAddress","addHexPrefix","toChecksumAddress","toLowerCase","i","parseInt","toUpperCase","isValidChecksumAddress","generateAddress","nonce","isZero","isPrecompiled","str","isHexPrefixed","isValidSignature","homestead","SECP256K1_N_DIV_2","SECP256K1_N","gt","cmp","baToJSON","ba","array","push","defineProperties","self","fields","data","raw","_fields","toJSON","label","forEach","field","this","serialize","getter","setter","allowZero","allowLess","name","defineProperty","enumerable","configurable","get","set","default","alias","decode","d","keys","indexOf","secp256k1v3","der","module","privateKeyExport","compressed","RangeError","privateKeyImport","privateKeyNegate","privateKeyModInverse","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","signatureNormalize","signatureExport","signatureImport","signatureImportLax","sigObj","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","buffer","ecdsaSign","recid","verify","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","ec","EC","ecparams","curve","ucmp","n","point","g","mul","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","result","index","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","utils","ABI","elementaryName","startsWith","parseTypeN","type","exec","parseTypeNxM","tmp","parseTypeArray","match","parseNumber","arg","parseSignature","args","method","split","retargs","params","encodeSingle","size","lastIndexOf","JSON","parse","unshift","bitLength","pow","decodeSingle","parsedType","offset","parseType","rawType","decoded","subArray","memoryUsage","mod","div","isDynamic","stringify","value","eventID","types","map","join","methodID","rawEncode","values","output","headLength","cur","rawDecode","parsed","simpleEncode","call","arguments","simpleDecode","item","solidityHexValue","bitsize","subType","replace","arraySize","arrayValues","padding","bytesize","solidityPack","soliditySHA3","soliditySHA256","solidityRIPEMD160","fromSerpent","c","j","toSerpent","__exportStar","nacl","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","h","l","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","k","o","p","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","m","mpos","b","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","key","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","Math","floor","sel25519","q","t","pack25519","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","e","f","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","reduce","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","arr","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","open","box","keyLength","nonceLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","secretKey","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","fromSeed","seed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues","min","root","util","validateBase64","decodeUTF8","unescape","encodeURIComponent","charCodeAt","encodeUTF8","String","fromCharCode","decodeURIComponent","escape","atob","encodeBase64","decodeBase64","btoa","intToHex","arrayContainsArray","superset","subset","some","Boolean","hex","getBinarySize","byteLength","fromAscii","stringValue","fromUtf8","toAscii","substring","code","substr","toUtf8","getKeys","allowEmpty","val","inherits","ctor","superCtor","super_","TempCtor","number","endian","negative","words","red","_init","wordSize","window","parseHex4Bits","string","parseHexByte","lowerBound","parseBase","start","end","max","left","_initNumber","_initArray","_parseHex","_parseBase","ceil","w","off","strip","limbLen","limbPow","total","word","imuln","_iaddn","dest","clone","_expand","_normSign","inspect","groupSizes","groupBases","smallMulTo","lo","ncarry","rword","maxJ","groupSize","groupBase","modn","idivn","ArrayType","reqLength","littleEndian","res","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","a0","a1","a2","a3","a4","a5","a6","a7","a8","al8","ah8","a9","al9","ah9","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","umod","divRound","dm","half","acc","egcd","B","C","isEven","yp","xp","im","jm","gcd","_invmp","delta","cmpn","bincn","gtn","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","imulK","_strip","input","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont"],"mappings":"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,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGI,EAAqC,EAAO,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGF,EAAQ,iBAAmB,SACzB,EACA,EACA,sBAEE,IAAI,EAAS,EAAO,KACpB,EAAa,EAAmC,GAIhD,OAFA,EAAS,KAAK,EAAQ,EAAa,EAAI,GACvC,EAAQ,KAAK,EAAQ,EAAa,IAAM,KACnC,GAGT,EAAQ,iBAAmB,SAAS,GAChC,IAAI,EAAS,EAAW,OAGtB,EAAQ,EACV,GAAE,EAAS,EAAQ,GAA2B,KAAtB,EAAW,GAAiB,OAAO,KAI3D,GAAE,GAHF,GAAO,GAGY,KAA2B,IAApB,EAAW,IAAgB,OAAO,KAE5D,IAAI,EAA2B,IAApB,EAAW,GAEtB,GAAE,EAAO,GAAK,EAAO,EAAG,OAAO,KAC/B,GAAE,GAFF,GAAO,GAEY,EAAM,OAAO,KAGhC,IAAI,EAAM,EAAW,EAAQ,E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","file":"static/js/26.5276aba6.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecdhUnsafe = exports.ecdh = exports.recover = exports.verify = exports.sign = exports.signatureImportLax = exports.signatureImport = exports.signatureExport = exports.signatureNormalize = exports.publicKeyCombine = exports.publicKeyTweakMul = exports.publicKeyTweakAdd = exports.publicKeyVerify = exports.publicKeyConvert = exports.publicKeyCreate = exports.privateKeyTweakMul = exports.privateKeyTweakAdd = exports.privateKeyModInverse = exports.privateKeyNegate = exports.privateKeyImport = exports.privateKeyExport = exports.privateKeyVerify = void 0;\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\nvar secp256k1v3 = require('./secp256k1v3-lib/index');\nvar der = require('./secp256k1v3-lib/der');\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nexports.privateKeyVerify = function (privateKey) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        return false;\n    }\n    return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nexports.privateKeyExport = function (privateKey, compressed) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n    return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyImport = function (privateKey) {\n    // privateKeyImport method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    privateKey = der.privateKeyImport(privateKey);\n    if (privateKey !== null && privateKey.length === 32 && exports.privateKeyVerify(privateKey)) {\n        return privateKey;\n    }\n    throw new Error(\"couldn't import from DER format\");\n};\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyNegate = function (privateKey) {\n    return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyModInverse = function (privateKey) {\n    if (privateKey.length !== 32) {\n        throw new Error('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCreate = function (privateKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyConvert = function (publicKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.publicKeyVerify = function (publicKey) {\n    // secp256k1 v4 version throws when publicKey length is not 33 or 65\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCombine = function (publicKeys, compressed) {\n    var keys = [];\n    publicKeys.forEach(function (publicKey) {\n        keys.push(Uint8Array.from(publicKey));\n    });\n    return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureNormalize = function (signature) {\n    return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureExport = function (signature) {\n    return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImport = function (signature) {\n    return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImportLax = function (signature) {\n    // signatureImportLax method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure that signature is greater than 0\n    if (signature.length === 0) {\n        throw new RangeError('signature length is invalid');\n    }\n    var sigObj = der.signatureImportLax(signature);\n    if (sigObj === null) {\n        throw new Error(\"couldn't parse DER signature\");\n    }\n    return secp256k1v3.signatureImport(sigObj);\n};\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nexports.sign = function (message, privateKey, options) {\n    if (options === null) {\n        throw new TypeError('options should be an Object');\n    }\n    var signOptions = undefined;\n    if (options) {\n        signOptions = {};\n        if (options.data === null) {\n            // validate option.data length\n            throw new TypeError('options.data should be a Buffer');\n        }\n        if (options.data) {\n            if (options.data.length != 32) {\n                throw new RangeError('options.data length is invalid');\n            }\n            signOptions.data = new Uint8Array(options.data);\n        }\n        if (options.noncefn === null) {\n            throw new TypeError('options.noncefn should be a Function');\n        }\n        if (options.noncefn) {\n            // convert option.noncefn function signature\n            signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n                var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n                var bufferData = data != null ? Buffer.from(data) : null;\n                var buffer = Buffer.from('');\n                if (options.noncefn) {\n                    buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n                }\n                return new Uint8Array(buffer);\n            };\n        }\n    }\n    var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n    return {\n        signature: Buffer.from(sig.signature),\n        recovery: sig.recid,\n    };\n};\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.verify = function (message, signature, publicKey) {\n    return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.recover = function (message, signature, recid, compressed) {\n    return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.ecdh = function (publicKey, privateKey) {\n    // note: secp256k1 v3 doesn't allow optional parameter\n    return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    // ecdhUnsafe method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure valid publicKey length\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        throw new RangeError('public key length is invalid');\n    }\n    // ensure valid privateKey length\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n//# sourceMappingURL=secp256k1v3-adapter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlphash = exports.ripemd160 = exports.sha256 = exports.keccak256 = exports.keccak = void 0;\nvar _a = require('ethereum-cryptography/keccak'), keccak224 = _a.keccak224, keccak384 = _a.keccak384, k256 = _a.keccak256, keccak512 = _a.keccak512;\nvar createHash = require('create-hash');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n        a = Buffer.from(a, 'utf8');\n    }\n    else {\n        a = bytes_1.toBuffer(a);\n    }\n    if (!bits)\n        bits = 256;\n    switch (bits) {\n        case 224: {\n            return keccak224(a);\n        }\n        case 256: {\n            return k256(a);\n        }\n        case 384: {\n            return keccak384(a);\n        }\n        case 512: {\n            return keccak512(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\" + bits);\n        }\n    }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLength(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = exports.rlp = exports.BN = void 0;\nvar secp256k1 = require('./secp256k1v3-adapter');\nexports.secp256k1 = secp256k1;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Hash functions\n */\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(require(\"./object\"), exports);\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _require = require('ethereum-cryptography/keccak'),\n    keccak224 = _require.keccak224,\n    keccak384 = _require.keccak384,\n    k256 = _require.keccak256,\n    keccak512 = _require.keccak512;\n\nvar secp256k1 = require('./secp256k1-adapter');\nvar assert = require('assert');\nvar rlp = require('rlp');\nvar BN = require('bn.js');\nvar createHash = require('create-hash');\nvar Buffer = require('safe-buffer').Buffer;\nObject.assign(exports, require('ethjs-util'));\n\n/**\n * the max integer that this VM can handle (a ```BN```)\n * @var {BN} MAX_INTEGER\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n\n/**\n * 2^256 (a ```BN```)\n * @var {BN} TWO_POW256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n\n/**\n * Keccak-256 hash of null (a ```String```)\n * @var {String} KECCAK256_NULL_S\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nexports.SHA3_NULL_S = exports.KECCAK256_NULL_S;\n\n/**\n * Keccak-256 hash of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_NULL\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\nexports.SHA3_NULL = exports.KECCAK256_NULL;\n\n/**\n * Keccak-256 of an RLP of an empty array (a ```String```)\n * @var {String} KECCAK256_RLP_ARRAY_S\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\nexports.SHA3_RLP_ARRAY_S = exports.KECCAK256_RLP_ARRAY_S;\n\n/**\n * Keccak-256 of an RLP of an empty array (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP_ARRAY\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\nexports.SHA3_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY;\n\n/**\n * Keccak-256 hash of the RLP of null  (a ```String```)\n * @var {String} KECCAK256_RLP_S\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\nexports.SHA3_RLP_S = exports.KECCAK256_RLP_S;\n\n/**\n * Keccak-256 hash of the RLP of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\nexports.SHA3_RLP = exports.KECCAK256_RLP;\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n * @var {Function}\n */\nexports.BN = BN;\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n * @var {Function}\n */\nexports.rlp = rlp;\n\n/**\n * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)\n * @var {Object}\n */\nexports.secp256k1 = secp256k1;\n\n/**\n * Returns a buffer filled with 0s\n * @method zeros\n * @param {Number} bytes  the number of bytes the buffer should be\n * @return {Buffer}\n */\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n\n/**\n  * Returns a zero address\n  * @method zeroAddress\n  * @return {String}\n  */\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var zeroAddress = exports.zeros(addressLength);\n  return exports.bufferToHex(zeroAddress);\n};\n\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @method lsetLength\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @param {Boolean} [right=false] whether to start padding form the left or right\n * @return {Buffer|Array}\n */\nexports.setLengthLeft = exports.setLength = function (msg, length, right) {\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n    return msg.slice(-length);\n  }\n};\n\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @return {Buffer|Array}\n */\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n\n/**\n * Trims leading zeros from a `Buffer` or an `Array`\n * @param {Buffer|Array|String} a\n * @return {Buffer|Array|String}\n */\nexports.unpad = exports.stripZeros = function (a) {\n  a = exports.stripHexPrefix(a);\n  var first = a[0];\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n  return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param {*} v the value\n */\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (exports.isHexString(v)) {\n        v = Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = exports.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n  return v;\n};\n\n/**\n * Converts a `Buffer` to a `Number`\n * @param {Buffer} buf\n * @return {Number}\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n\n/**\n * Converts a `Buffer` into a hex `String`\n * @param {Buffer} buf\n * @return {String}\n */\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param {Buffer} num\n * @return {BN}\n */\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param {BN} num\n * @return {Buffer}\n */\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n\n/**\n * Creates Keccak hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the Keccak width\n * @return {Buffer}\n */\nexports.keccak = function (a, bits) {\n  a = exports.toBuffer(a);\n  if (!bits) bits = 256;\n\n  switch (bits) {\n    case 224:\n      {\n        return keccak224(a);\n      }\n    case 256:\n      {\n        return k256(a);\n      }\n    case 384:\n      {\n        return keccak384(a);\n      }\n    case 512:\n      {\n        return keccak512(a);\n      }\n    default:\n      {\n        throw new Error('Invald algorithm: keccak' + bits);\n      }\n  }\n};\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256)\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n\n/**\n * Creates SHA-3 (Keccak) hash of the input [OBSOLETE]\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the SHA-3 width\n * @return {Buffer}\n */\nexports.sha3 = exports.keccak;\n\n/**\n * Creates SHA256 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.sha256 = function (a) {\n  a = exports.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n\n/**\n * Creates RIPEMD160 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Boolean} padded whether it should be padded to 256 bits or not\n * @return {Buffer}\n */\nexports.ripemd160 = function (a, padded) {\n  a = exports.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n  if (padded === true) {\n    return exports.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n * @param {Buffer} privateKey\n * @return {Boolean}\n */\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param {Buffer} publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Boolean}\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Buffer}\n */\nexports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {\n  pubKey = exports.toBuffer(pubKey);\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n  assert(pubKey.length === 64);\n  // Only take the lower 160bits of the hash\n  return exports.keccak(pubKey).slice(-20);\n};\n\n/**\n * Returns the ethereum public key of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\nvar privateToPublic = exports.privateToPublic = function (privateKey) {\n  privateKey = exports.toBuffer(privateKey);\n  // skip the type flag and use the X, Y points\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n\n/**\n * Converts a public key to the Ethereum format.\n * @param {Buffer} publicKey\n * @return {Buffer}\n */\nexports.importPublic = function (publicKey) {\n  publicKey = exports.toBuffer(publicKey);\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n  return publicKey;\n};\n\n/**\n * ECDSA sign\n * @param {Buffer} msgHash\n * @param {Buffer} privateKey\n * @return {Object}\n */\nexports.ecsign = function (msgHash, privateKey) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n\n  var ret = {};\n  ret.r = sig.signature.slice(0, 32);\n  ret.s = sig.signature.slice(32, 64);\n  ret.v = sig.recovery + 27;\n  return ret;\n};\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n * @param message\n * @returns {Buffer} hash\n */\nexports.hashPersonalMessage = function (message) {\n  var prefix = exports.toBuffer('\\x19Ethereum Signed Message:\\n' + message.length.toString());\n  return exports.keccak(Buffer.concat([prefix, message]));\n};\n\n/**\n * ECDSA public key recovery from signature\n * @param {Buffer} msgHash\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {Buffer} publicKey\n */\nexports.ecrecover = function (msgHash, v, r, s) {\n  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64);\n  var recovery = v - 27;\n  if (recovery !== 0 && recovery !== 1) {\n    throw new Error('Invalid signature v value');\n  }\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {String} sig\n */\nexports.toRpcSig = function (v, r, s) {\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (v !== 27 && v !== 28) {\n    throw new Error('Invalid recovery id');\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  // FIXME: this might change in the future - https://github.com/ethereum/go-ethereum/issues/2053\n  return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v - 27)]));\n};\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * @param {String} sig\n * @return {Object}\n */\nexports.fromRpcSig = function (sig) {\n  sig = exports.toBuffer(sig);\n\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (sig.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = sig[64];\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: sig.slice(0, 32),\n    s: sig.slice(32, 64)\n  };\n};\n\n/**\n * Returns the ethereum address of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(privateToPublic(privateKey));\n};\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too\n * @param {String} address\n * @return {Boolean}\n */\nexports.isValidAddress = function (address) {\n  return (/^0x[0-9a-fA-F]{40}$/.test(address)\n  );\n};\n\n/**\n  * Checks if a given address is a zero address\n  * @method isZeroAddress\n  * @param {String} address\n  * @return {Boolean}\n  */\nexports.isZeroAddress = function (address) {\n  var zeroAddress = exports.zeroAddress();\n  return zeroAddress === exports.addHexPrefix(address);\n};\n\n/**\n * Returns a checksummed address\n * @param {String} address\n * @return {String}\n */\nexports.toChecksumAddress = function (address) {\n  address = exports.stripHexPrefix(address).toLowerCase();\n  var hash = exports.keccak(address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Checks if the address is a valid checksummed address\n * @param {Buffer} address\n * @return {Boolean}\n */\nexports.isValidChecksumAddress = function (address) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;\n};\n\n/**\n * Generates an address of a newly created contract\n * @param {Buffer} from the address which is creating this new address\n * @param {Buffer} nonce the nonce of the from account\n * @return {Buffer}\n */\nexports.generateAddress = function (from, nonce) {\n  from = exports.toBuffer(from);\n  nonce = new BN(nonce);\n\n  if (nonce.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    nonce = null;\n  } else {\n    nonce = Buffer.from(nonce.toArray());\n  }\n\n  // Only take the lower 160bits of the hash\n  return exports.rlphash([from, nonce]).slice(-20);\n};\n\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium)\n * @param {Buffer|String} address\n * @return {Boolean}\n */\nexports.isPrecompiled = function (address) {\n  var a = exports.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\"\n * @param {String} str\n * @return {String}\n */\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return exports.isHexPrefixed(str) ? str : '0x' + str;\n};\n\n/**\n * Validate ECDSA signature\n * @method isValidSignature\n * @param {Buffer} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Boolean} [homestead=true]\n * @return {Boolean}\n */\n\nexports.isValidSignature = function (v, r, s, homestead) {\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (v !== 27 && v !== 28) {\n    return false;\n  }\n\n  r = new BN(r);\n  s = new BN(s);\n\n  if (r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homestead === false && new BN(s).cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Converts a `Buffer` or `Array` to JSON\n * @param {Buffer|Array} ba\n * @return {Array|String|null}\n */\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return '0x' + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n    return array;\n  }\n};\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param {Object} self the `Object` to define properties on\n * @param {Array} fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param {*} data data to be validated against the definitions\n */\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = [];\n\n  // attach the `toJSON`\n  self.toJSON = function (label) {\n    if (label) {\n      var obj = {};\n      self._fields.forEach(function (field) {\n        obj[field] = '0x' + self[field].toString('hex');\n      });\n      return obj;\n    }\n    return exports.baToJSON(this.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n    function getter() {\n      return self.raw[i];\n    }\n    function setter(v) {\n      v = exports.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = exports.stripZeros(v);\n        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes');\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  });\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(exports.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      }\n\n      // make sure all the items are buffers\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = exports.toBuffer(d);\n      });\n    } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n      var keys = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};","'use strict';\n\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\n\nvar secp256k1v3 = require('./secp256k1-lib/index');\nvar der = require('./secp256k1-lib/der');\n\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nvar privateKeyVerify = function privateKeyVerify(privateKey) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    return false;\n  }\n\n  return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nvar privateKeyExport = function privateKeyExport(privateKey, compressed) {\n  // privateKeyExport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n\n  return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\nvar privateKeyImport = function privateKeyImport(privateKey) {\n  // privateKeyImport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  privateKey = der.privateKeyImport(privateKey);\n  if (privateKey !== null && privateKey.length === 32 && privateKeyVerify(privateKey)) {\n    return privateKey;\n  }\n\n  throw new Error(\"couldn't import from DER format\");\n};\n\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar privateKeyNegate = function privateKeyNegate(privateKey) {\n  return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar privateKeyModInverse = function privateKeyModInverse(privateKey) {\n  if (privateKey.length !== 32) {\n    throw new Error('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nvar privateKeyTweakAdd = function privateKeyTweakAdd(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nvar privateKeyTweakMul = function privateKeyTweakMul(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyCreate = function publicKeyCreate(privateKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyConvert = function publicKeyConvert(publicKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nvar publicKeyVerify = function publicKeyVerify(publicKey) {\n  // secp256k1 v4 version throws when publicKey length is not 33 or 65\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyTweakAdd = function publicKeyTweakAdd(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyTweakMul = function publicKeyTweakMul(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyCombine = function publicKeyCombine(publicKeys, compressed) {\n  var keys = [];\n  publicKeys.forEach(function (publicKey) {\n    keys.push(Uint8Array.from(publicKey));\n  });\n\n  return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureNormalize = function signatureNormalize(signature) {\n  return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureExport = function signatureExport(signature) {\n  return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureImport = function signatureImport(signature) {\n  return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureImportLax = function signatureImportLax(signature) {\n  // signatureImportLax method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure that signature is greater than 0\n  if (signature.length === 0) {\n    throw new RangeError('signature length is invalid');\n  }\n\n  var sigObj = der.signatureImportLax(signature);\n  if (sigObj === null) {\n    throw new Error(\"couldn't parse DER signature\");\n  }\n\n  return secp256k1v3.signatureImport(sigObj);\n};\n\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nvar sign = function sign(message, privateKey, options) {\n  if (options === null) {\n    throw new TypeError('options should be an Object');\n  }\n\n  var signOptions = void 0;\n\n  if (options) {\n    signOptions = {};\n\n    if (options.data === null) {\n      throw new TypeError('options.data should be a Buffer');\n    }\n\n    if (options.data) {\n      // validate option.data length\n      if (options.data.length !== 32) {\n        throw new RangeError('options.data length is invalid');\n      }\n\n      signOptions.data = new Uint8Array(options.data);\n    }\n\n    if (options.noncefn === null) {\n      throw new TypeError('options.noncefn should be a Function');\n    }\n\n    if (options.noncefn) {\n      //  convert option.noncefn function signature\n      signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n        var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n        var bufferData = data != null ? Buffer.from(data) : null;\n\n        var buffer = Buffer.from('');\n\n        if (options.noncefn) {\n          buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n        }\n\n        return Uint8Array.from(buffer);\n      };\n    }\n  }\n\n  var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n\n  return {\n    signature: Buffer.from(sig.signature),\n    recovery: sig.recid\n  };\n};\n\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nvar verify = function verify(message, signature, publicKey) {\n  // note: secp256k1 v4 verify method has a different argument order\n  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar recover = function recover(message, signature, recid, compressed) {\n  // note: secp256k1 v4 recover method has a different argument order\n  return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar ecdh = function ecdh(publicKey, privateKey) {\n  // note: secp256k1 v3 doesn't allow optional parameter\n  return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\n\n/**\n * Compute an EC Diffie-Hellman secret and return public key as result\n * @method ecdhUnsafe\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar ecdhUnsafe = function ecdhUnsafe(publicKey, privateKey, compressed) {\n  // ecdhUnsafe method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure valid publicKey length\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    throw new RangeError('public key length is invalid');\n  }\n\n  // ensure valid privateKey length\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n\nmodule.exports = {\n  privateKeyVerify: privateKeyVerify,\n  privateKeyExport: privateKeyExport,\n  privateKeyImport: privateKeyImport,\n  privateKeyNegate: privateKeyNegate,\n  privateKeyModInverse: privateKeyModInverse,\n  privateKeyTweakAdd: privateKeyTweakAdd,\n  privateKeyTweakMul: privateKeyTweakMul,\n\n  publicKeyCreate: publicKeyCreate,\n  publicKeyConvert: publicKeyConvert,\n  publicKeyVerify: publicKeyVerify,\n  publicKeyTweakAdd: publicKeyTweakAdd,\n  publicKeyTweakMul: publicKeyTweakMul,\n  publicKeyCombine: publicKeyCombine,\n\n  signatureNormalize: signatureNormalize,\n  signatureExport: signatureExport,\n  signatureImport: signatureImport,\n  signatureImportLax: signatureImportLax,\n\n  sign: sign,\n  verify: verify,\n  recover: recover,\n\n  ecdh: ecdh,\n  ecdhUnsafe: ecdhUnsafe\n};","'use strict';\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar BN = require('bn.js');\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n  if (d.ucmp(ecparams.n) >= 0) {\n    throw new Error('couldn\\'t export to DER format');\n  }\n\n  var point = ec.g.mul(d);\n  return toPublicKey(point.getX(), point.getY(), compressed);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n    throw new Error('private key range is invalid');\n  }\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n  if (r.ucmp(ecparams.n) >= 0) {\n    r = new BN(0);\n  }\n\n  var s = new BN(sigObj.s);\n  if (s.ucmp(ecparams.n) >= 0) {\n    s = new BN(0);\n  }\n\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var point = ec.keyFromPublic(publicKey);\n\n  var scalar = new BN(privateKey);\n  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n    throw new Error('scalar was invalid (zero or overflow)');\n  }\n\n  var shared = point.pub.mul(scalar);\n  return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\n\nvar toPublicKey = function toPublicKey(x, y, compressed) {\n  var publicKey = void 0;\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n  }\n\n  return publicKey;\n};","\"use strict\";\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n// begin\n0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n// private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n// middle\n0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n// public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n// begin\n0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n// private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n// middle\n0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n// public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n  privateKey.copy(result, compressed ? 8 : 9);\n  publicKey.copy(result, compressed ? 181 : 214);\n  return result;\n};\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length;\n\n  // sequence header\n  var index = 0;\n  if (length < index + 1 || privateKey[index] !== 0x30) return null;\n  index += 1;\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;\n\n  var lenb = privateKey[index] & 0x7f;\n  index += 1;\n  if (lenb < 1 || lenb > 2) return null;\n  if (length < index + lenb) return null;\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n  index += lenb;\n  if (length < index + len) return null;\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n    return null;\n  }\n  index += 3;\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n    return null;\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\n\nexports.signatureImportLax = function (signature) {\n  var r = Buffer.alloc(32, 0);\n  var s = Buffer.alloc(32, 0);\n\n  var length = signature.length;\n  var index = 0;\n\n  // sequence tag byte\n  if (signature[index++] !== 0x30) {\n    return null;\n  }\n\n  // sequence length byte\n  var lenbyte = signature[index++];\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80;\n    if (index > length) {\n      return null;\n    }\n  }\n\n  // sequence tag byte for r\n  if (signature[index++] !== 0x02) {\n    return null;\n  }\n\n  // length for r\n  var rlen = signature[index++];\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80;\n    if (index + lenbyte > length) {\n      return null;\n    }\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      rlen = (rlen << 8) + signature[index];\n    }\n  }\n  if (rlen > length - index) {\n    return null;\n  }\n  var rindex = index;\n  index += rlen;\n\n  // sequence tag byte for s\n  if (signature[index++] !== 0x02) {\n    return null;\n  }\n\n  // length for s\n  var slen = signature[index++];\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80;\n    if (index + lenbyte > length) {\n      return null;\n    }\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      slen = (slen << 8) + signature[index];\n    }\n  }\n  if (slen > length - index) {\n    return null;\n  }\n  var sindex = index;\n  index += slen;\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1) {}\n  // copy r value\n  if (rlen > 32) {\n    return null;\n  }\n  var rvalue = signature.slice(rindex, rindex + rlen);\n  rvalue.copy(r, 32 - rvalue.length);\n\n  // ignore leading zeros in s\n  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1) {}\n  // copy s value\n  if (slen > 32) {\n    return null;\n  }\n  var svalue = signature.slice(sindex, sindex + slen);\n  svalue.copy(s, 32 - svalue.length);\n\n  return { r: r, s: s };\n};","module.exports = require('./lib/index.js')\n","/* eslint-disable no-useless-escape */\nconst utils = require('ethereumjs-util')\nconst BN = require('bn.js')\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n","\"use strict\";\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BN = require(\"bn.js\");\nvar EC = require('elliptic').ec;\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\nexports.privateKeyExport = function (privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var d = new BN(privateKey);\n    if (d.ucmp(ecparams.n) >= 0) {\n        throw new Error(\"couldn't export to DER format\");\n    }\n    var point = ec.g.mul(d);\n    return toPublicKey(point.getX(), point.getY(), compressed);\n};\nexports.privateKeyModInverse = function (privateKey) {\n    var bn = new BN(privateKey);\n    if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n        throw new Error('private key range is invalid');\n    }\n    return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\nexports.signatureImport = function (sigObj) {\n    var r = new BN(sigObj.r);\n    if (r.ucmp(ecparams.n) >= 0) {\n        r = new BN(0);\n    }\n    var s = new BN(sigObj.s);\n    if (s.ucmp(ecparams.n) >= 0) {\n        s = new BN(0);\n    }\n    return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var point = ec.keyFromPublic(publicKey);\n    var scalar = new BN(privateKey);\n    if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n        throw new Error('scalar was invalid (zero or overflow)');\n    }\n    var shared = point.pub.mul(scalar);\n    return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\nvar toPublicKey = function (x, y, compressed) {\n    var publicKey;\n    if (compressed) {\n        publicKey = Buffer.alloc(33);\n        publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    }\n    else {\n        publicKey = Buffer.alloc(65);\n        publicKey[0] = 0x04;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n        y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x81,\n    0xd3,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0x85,\n    0x30,\n    0x81,\n    0x82,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x21,\n    0x02,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x24,\n    0x03,\n    0x22,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x82,\n    0x01,\n    0x13,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0xa5,\n    0x30,\n    0x81,\n    0xa2,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x41,\n    0x04,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x48,\n    0x3a,\n    0xda,\n    0x77,\n    0x26,\n    0xa3,\n    0xc4,\n    0x65,\n    0x5d,\n    0xa4,\n    0xfb,\n    0xfc,\n    0x0e,\n    0x11,\n    0x08,\n    0xa8,\n    0xfd,\n    0x17,\n    0xb4,\n    0x48,\n    0xa6,\n    0x85,\n    0x54,\n    0x19,\n    0x9c,\n    0x47,\n    0xd0,\n    0x8f,\n    0xfb,\n    0x10,\n    0xd4,\n    0xb8,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x44,\n    0x03,\n    0x42,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n    privateKey.copy(result, compressed ? 8 : 9);\n    publicKey.copy(result, compressed ? 181 : 214);\n    return result;\n};\nexports.privateKeyImport = function (privateKey) {\n    var length = privateKey.length;\n    // sequence header\n    var index = 0;\n    if (length < index + 1 || privateKey[index] !== 0x30)\n        return null;\n    index += 1;\n    // sequence length constructor\n    if (length < index + 1 || !(privateKey[index] & 0x80))\n        return null;\n    var lenb = privateKey[index] & 0x7f;\n    index += 1;\n    if (lenb < 1 || lenb > 2)\n        return null;\n    if (length < index + lenb)\n        return null;\n    // sequence length\n    var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n    index += lenb;\n    if (length < index + len)\n        return null;\n    // sequence element 0: version number (=1)\n    if (length < index + 3 ||\n        privateKey[index] !== 0x02 ||\n        privateKey[index + 1] !== 0x01 ||\n        privateKey[index + 2] !== 0x01) {\n        return null;\n    }\n    index += 3;\n    // sequence element 1: octet string, up to 32 bytes\n    if (length < index + 2 ||\n        privateKey[index] !== 0x04 ||\n        privateKey[index + 1] > 0x20 ||\n        length < index + 2 + privateKey[index + 1]) {\n        return null;\n    }\n    return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\nexports.signatureImportLax = function (signature) {\n    var r = Buffer.alloc(32, 0);\n    var s = Buffer.alloc(32, 0);\n    var length = signature.length;\n    var index = 0;\n    // sequence tag byte\n    if (signature[index++] !== 0x30) {\n        return null;\n    }\n    // sequence length byte\n    var lenbyte = signature[index++];\n    if (lenbyte & 0x80) {\n        index += lenbyte - 0x80;\n        if (index > length) {\n            return null;\n        }\n    }\n    // sequence tag byte for r\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for r\n    var rlen = signature[index++];\n    if (rlen & 0x80) {\n        lenbyte = rlen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            rlen = (rlen << 8) + signature[index];\n    }\n    if (rlen > length - index) {\n        return null;\n    }\n    var rindex = index;\n    index += rlen;\n    // sequence tag byte for s\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for s\n    var slen = signature[index++];\n    if (slen & 0x80) {\n        lenbyte = slen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            slen = (slen << 8) + signature[index];\n    }\n    if (slen > length - index) {\n        return null;\n    }\n    var sindex = index;\n    index += slen;\n    // ignore leading zeros in r\n    for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1)\n        ;\n    // copy r value\n    if (rlen > 32) {\n        return null;\n    }\n    var rvalue = signature.slice(rindex, rindex + rlen);\n    rvalue.copy(r, 32 - rvalue.length);\n    // ignore leading zeros in s\n    for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1)\n        ;\n    // copy s value\n    if (slen > 32) {\n        return null;\n    }\n    var svalue = signature.slice(sindex, sindex + slen);\n    svalue.copy(s, 32 - svalue.length);\n    return { r: r, s: s };\n};\n//# sourceMappingURL=der.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.isPrecompiled = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar secp256k1 = require('./secp256k1v3-adapter');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (address) {\n    return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (address) {\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n    address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccak(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n    return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    from = bytes_1.toBuffer(from);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    var fromBuf = bytes_1.toBuffer(from);\n    var saltBuf = bytes_1.toBuffer(salt);\n    var initCodeBuf = bytes_1.toBuffer(initCode);\n    assert(fromBuf.length === 20);\n    assert(saltBuf.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n    return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\nexports.isPrecompiled = function (address) {\n    var a = bytes_1.unpad(address);\n    return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    pubKey = bytes_1.toBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    privateKey = bytes_1.toBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    publicKey = bytes_1.toBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1 = require('./secp256k1v3-adapter');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = secp256k1.sign(msgHash, privateKey);\n    var recovery = sig.recovery;\n    var ret = {\n        r: sig.signature.slice(0, 32),\n        s: sig.signature.slice(32, 64),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n    return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.stripZeros(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n    if (right === void 0) { right = false; }\n    var buf = exports.zeros(length);\n    msg = exports.toBuffer(msg);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n    return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n    a = ethjsUtil.stripHexPrefix(a);\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map"],"sourceRoot":""}